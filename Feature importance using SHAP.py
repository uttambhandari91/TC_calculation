# -*- coding: utf-8 -*-
"""SHAP_TC03/22/2023.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uh7qruyKslim_b2xRFeA8Sc9w5TkR-7Z
"""

#!pip install shap

from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
import shap
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

df = pd.read_csv('/content/NEW_TC_UP.csv')

df.describe

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df.drop(['TC'], axis=1), df['TC'], test_size=0.1, random_state=1)

# train an XGBoost model
model = XGBRegressor(colsample_bytree =0.4, n_estimators=900, learning_rate=0.1, max_depth=6, gamma=0,subsample= 0.5)
model.fit(X_train, y_train)

figure = plt.gcf() # get current figure
plt.rcParams["font.weight"] = "bold"
plt.rcParams["axes.labelweight"] = "bold"
plt.rcParams["font.size"] = 14
figure.set_size_inches(20, 10)

# Compute Shapley values
explainer = shap.Explainer(model)
shap_values = explainer(X_train)
# explain the model's predictions using SHAP
shap.plots.bar(shap_values)
figure = plt.gcf() # get current figure
axes = plt.figure(figsize=(40, 40))